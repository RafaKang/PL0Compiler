const CONST
m ID
= ET
10 UNSIGNED
; SEMICOLON
var VARIABLE
i ID
, COMMA
j ID
, COMMA
k ID
: COLON
integer INTEGER
; SEMICOLON
arr ID
: COLON
array ARRAY
[ LBRACHET
50 UNSIGNED
] RBRACHET
of OF
integer INTEGER
; SEMICOLON
n ID
: COLON
integer INTEGER
; SEMICOLON
in ID
: COLON
array ARRAY
[ LBRACHET
11 UNSIGNED
] RBRACHET
of OF
integer INTEGER
; SEMICOLON
T ID
: COLON
integer INTEGER
; SEMICOLON
procedure PROCEDURE
print ID
; SEMICOLON
var VARIABLE
i ID
: COLON
integer INTEGER
; SEMICOLON
begin BEGIN
for FOR
i ID
:= ASSIGN
1 UNSIGNED
to TO
n ID
do DO
begin BEGIN
write WRITE
( LPAREN
a ID
[ LBRACHET
i ID
] RBRACHET
) RPAREN
; SEMICOLON
write WRITE
( LPAREN
  STRING
) RPAREN
; SEMICOLON
end END
; SEMICOLON
write WRITE
( LPAREN
\n STRING
) RPAREN
; SEMICOLON
end END
; SEMICOLON
function FUNCTION
dfs ID
( LPAREN
i ID
: COLON
integer INTEGER
) RPAREN
: COLON
integer INTEGER
; SEMICOLON
var VARIABLE
j ID
: COLON
integer INTEGER
; SEMICOLON
begin BEGIN
if IF
i ID
= ET
n ID
then THEN
begin BEGIN
print ID
; SEMICOLON
dfs ID
:= ASSIGN
1 UNSIGNED
; SEMICOLON
end END
else ELSE
begin BEGIN
dfs ID
:= ASSIGN
0 UNSIGNED
; SEMICOLON
for FOR
j ID
:= ASSIGN
1 UNSIGNED
to TO
n ID
do DO
if IF
in ID
[ LBRACHET
j ID
] RBRACHET
= ET
0 UNSIGNED
then THEN
begin BEGIN
in ID
[ LBRACHET
j ID
] RBRACHET
:= ASSIGN
1 UNSIGNED
; SEMICOLON
arr ID
[ LBRACHET
i ID
] RBRACHET
:= ASSIGN
j ID
; SEMICOLON
dfs ID
:= ASSIGN
dfs ID
+ PLUS
dfs ID
( LPAREN
i ID
+ PLUS
1 UNSIGNED
) RPAREN
; SEMICOLON
in ID
[ LBRACHET
j ID
] RBRACHET
:= ASSIGN
0 UNSIGNED
; SEMICOLON
end END
end END
end END
; SEMICOLON
begin BEGIN
read READ
( LPAREN
T ID
) RPAREN
; SEMICOLON
do DO
begin BEGIN
T ID
:= ASSIGN
T ID
- MINUS
1 UNSIGNED
; SEMICOLON
read READ
( LPAREN
n ID
) RPAREN
; SEMICOLON
if IF
n ID
> GT
m ID
then THEN
write WRITE
( LPAREN
No\n STRING
) RPAREN
else ELSE
begin BEGIN
j ID
:= ASSIGN
1 UNSIGNED
; SEMICOLON
for FOR
i ID
:= ASSIGN
1 UNSIGNED
to TO
n ID
do DO
j ID
:= ASSIGN
j ID
* MULT
i ID
; SEMICOLON
write WRITE
( LPAREN
The total number should be: STRING
, COMMA
j ID
) RPAREN
; SEMICOLON
write WRITE
( LPAREN
\n STRING
) RPAREN
; SEMICOLON
write WRITE
( LPAREN
The total number is: STRING
, COMMA
dfs ID
( LPAREN
1 UNSIGNED
) RPAREN
) RPAREN
; SEMICOLON
write WRITE
( LPAREN
\n STRING
) RPAREN
; SEMICOLON
end END
end END
while WHILE
T ID
> GT
0 UNSIGNED
; SEMICOLON
end END
. ENDOFPROG
