var
  n, i,x: integer;
  a: array[64] of integer;
procedure swap(var a, b: integer);
var
  t: integer;
begin
  t:=a; a:=b; b:=t
end;
function partition(lo, hi: integer): integer;
var
  pivot: integer;
  i, j: integer;
begin
  pivot := a[hi];
  i := lo;
  for j:=lo to hi-1 do begin
    if a[j] <= pivot then begin
      swap(a[i], a[j]);
      i := i+1;
    end;
  end;
  swap(a[i], a[hi]);
  partition := i
end;
procedure qsort;
  procedure qsortr(lo, hi: integer);
  var
    p: integer;
  begin   if lo < hi then begin
      p := partition(lo, hi);
      qsortr(lo, p-1);
      qsortr(p+1, hi);
    end
  end;
begin
  qsortr(0, n-1)
end;
begin
  read(n);
  for i:=0 to n-1 do begin read(x);a[i]:=x;end;
  qsort;
  for i:=0 to n-1 do write(a[i])
; read(x); end.
